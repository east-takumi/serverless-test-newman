name: Serverless Tests

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
    
    - name: Install dependencies
      run: npm install --legacy-peer-deps
    
    - name: Set up AWS SAM CLI
      uses: aws-actions/setup-sam@v2
      
    - name: Build SAM application
      run: sam build
    
    - name: Start local Lambda environment
      run: |
        sam local start-lambda &
        echo "Waiting for Lambda to start..."
        sleep 10
    
    - name: Start local API Gateway
      run: |
        sam local start-api &
        echo "Waiting for API Gateway to start..."
        sleep 10
    
    - name: Set up Step Functions Local
      run: |
        docker run -d -p 8083:8083 --name stepfunctions-local \
          -e AWS_ACCESS_KEY_ID=dummy \
          -e AWS_SECRET_ACCESS_KEY=dummy \
          -e AWS_REGION=us-east-1 \
          -e LAMBDA_ENDPOINT=http://host.docker.internal:3001 \
          -e LAMBDA_FORWARD_REQUEST=1 \
          -e STEP_FUNCTIONS_ENDPOINT=http://localhost:8083 \
          -e SFN_MOCK_CONFIG='{"lambdaEndpoint":"http://host.docker.internal:3001"}' \
          -e WAIT_TIME_SCALE=0.1 \
          -e SFN_IAM_ROLE_ARN_PATTERN='arn:aws:iam::123456789012:role/.*' \
          --add-host=host.docker.internal:host-gateway \
          amazon/aws-stepfunctions-local
        echo "Waiting for Step Functions to start..."
        sleep 10
        DOCKER_HOST_IP=host.docker.internal node tests/setup-local-stepfunctions.js
        echo "Step Functions setup completed"
    
    - name: Run Newman tests
      run: |
        npx newman run tests/postman/serverless-test-collection.json \
          -e tests/postman/environment.json \
          --reporters cli,junit,htmlextra \
          --reporter-junit-export results/junit-report.xml \
          --reporter-htmlextra-export results/html-report.html
    
    - name: Upload test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: test-results
        path: results/
        
    # Postman同期機能（現在コメントアウト）
    # - name: Sync with Postman
    #   if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    #   run: npm run postman:upload
    #   env:
    #     POSTMAN_API_KEY: ${{ secrets.POSTMAN_API_KEY }}
    #     POSTMAN_COLLECTION_ID: ${{ secrets.POSTMAN_COLLECTION_ID }}
    #     POSTMAN_ENVIRONMENT_ID: ${{ secrets.POSTMAN_ENVIRONMENT_ID }}
        
    - name: Check test results
      run: |
        if [ -f results/junit-report.xml ]; then
          echo "Test results available"
          exit $(grep -c "failures=\"[1-9]" results/junit-report.xml)
        else
          echo "No test results found"
          exit 1
        fi
